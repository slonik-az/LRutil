% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/prj.R
\name{LR.prj_path}
\alias{LR.prj_path}
\title{Discover standard LR project directory hierarchy.}
\usage{
LR.prj_path(prj_root = NULL, marker = ".PRJ_ROOT")
}
\arguments{
\item{prj_root}{Project Root directory if string.
if \code{NULL} or \code{FALSE} -- auto-discover from current working directory \code{getwd()}.
if \code{TRUE} -- (only use in scripts, never directly in console!)
  auto-discover from the path of the script being executed or sourced, otherwise \code{getwd()}.}

\item{marker}{Project root marker file. Must exist in the project root directory.}
}
\value{
List of essential project subdirs as functions that when called with
  a filename produce the correspinding path; when called without a filename
  return the path to the subdir itself; see Examples for details.
  \item{root}{       - project root}
  \item{ana}{        - Data Analysis (src/ana)}
  \item{dat}{        - Data directory (dat)}
  \item{dat_raw}{    - Raw data directory (dat/raw)}
  \item{doc}{        - Documentation directory (doc)}
  \item{lib}{        - Local Library   (lib)}
  \item{lib_R}{      - Local R Library (lib/R)}
  \item{mng}{        - Data Munging/Wrangling (src/mng)}
  \item{rpt}{        - Reports (doc/rpt)}
  \item{src}{        - Source tree (src)}
  \item{src_lib}{    - Common code under Source tree (src/lib)}
  \item{pkg}{        - In case some code is made into R-packages (pkg)}
}
\description{
Discover standard LR project directory hierarchy.
prj_root marker file (.PRJ_ROOT by default) must exist in the project root directory.
}
\examples{
\dontrun{
if(!exists('prj')){ prj <- LRutil::LR.prj_path() }
prj$root()  # return prj_root
prj$root('readme') # returns path to prj_root/readme
prj$dat_raw('foo.csv') #returns path to prj_root/dat/raw/foo.csv
prj$src('subdir','test','t.R') #returns path to prj_root/src/subdir/test/t.R
prj$src(c('a.R','b.R')) #returns vector c('prj_root/src/a.R','prj_root/src/b.R')
}
}
